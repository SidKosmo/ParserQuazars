const puppeteer = require('puppeteer');
const fs = require('fs');

const cookiesPath = 'cookies.json';
const messagesFilePath = 'messages.json';

async function scrapeMessages(retries = 3) {
    console.log("üîÑ –ó–∞–ø—É—Å–∫ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è...");

    let browser;
    try {
        browser = await puppeteer.launch({ headless: false });
        const page = await browser.newPage();

        // üìå –ó–∞–≥—Ä—É–∂–∞–µ–º –∫—É–∫–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        if (fs.existsSync(cookiesPath)) {
            try {
                const cookies = JSON.parse(fs.readFileSync(cookiesPath, 'utf-8'));
                await page.setCookie(...cookies);
                console.log("‚úÖ –ö—É–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!");
            } catch (error) {
                console.error("‚ö† –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫—É–∫–æ–≤:", error);
            }
        }

        // üìå –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–æ–æ–±—â–µ–Ω–∏–π
        await page.goto('https://quasars.online/messages.php?mode=show&message_class=15', { waitUntil: 'load', timeout: 60000 });

        // üìå –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ª–æ–≥–∏–Ω–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        const loginForm = await page.$('input[name="username"]');
        if (loginForm) {
            console.log("‚ö† –ù–µ–æ–±—Ö–æ–¥–∏–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç!");
            await login(page);
        }

        // üìå –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
        await page.waitForSelector('tr[id^="mess"]');

        let allMessages = [];

        // üìå –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–ª-–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü
        const maxPage = await page.evaluate(() => {
            const lastPageLink = document.querySelector('a.link.first-last');
            const url = lastPageLink ? lastPageLink.href : '';
            const matches = url.match(/sheet=(\d+)/);
            return matches ? parseInt(matches[1], 10) : 1;
        });

        console.log(`üìÑ –í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü: ${maxPage}`);

        for (let pageNumber = 1; pageNumber <= maxPage; pageNumber++) {
            console.log(`üîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É ${pageNumber}`);

            await page.goto(`https://quasars.online/messages.php?mode=show&message_class=15&sheet=${pageNumber}`, { waitUntil: 'domcontentloaded', timeout: 60000 });
            await page.waitForSelector('tr[id^="mess"]');

            // üìå –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            const messages = await page.evaluate(() => {
                const rows = Array.from(document.querySelectorAll('tr[id^="mess"]'));
                return rows.map(row => {
                    const messageId = row.id;
                    const messageText = row.querySelector('td.mnl_expedition.c_l')?.innerText.trim() || "–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞";
                    const time = row.previousElementSibling?.querySelector('td.subheader:nth-child(2)')?.innerText.trim() || "–ù–µ –Ω–∞–π–¥–µ–Ω–æ";

                    return { messageId, text: messageText, time };
                });
            });

            allMessages = allMessages.concat(messages);
        }

        fs.writeFileSync(messagesFilePath, JSON.stringify(allMessages, null, 2));
        console.log("‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π:", allMessages.length);

        await browser.close();
        return { success: true, message: "‚úÖ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!" };

    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ:", error);

        if (browser) {
            await browser.close();
        }

        if (retries > 0) {
            console.log(`üîÅ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞... –û—Å—Ç–∞–ª–æ—Å—å: ${retries}`);
            return await scrapeMessages(retries - 1);
        }

        return { success: false, message: "‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –ø–æ—Å–ª–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–ø—ã—Ç–æ–∫!" };
    }
}

// üìå –§—É–Ω–∫—Ü–∏—è –≤—Ö–æ–¥–∞ –≤ –∞–∫–∫–∞—É–Ω—Ç
async function login(page) {
    await page.goto('https://quasars.online/login.php', { waitUntil: 'domcontentloaded' });

    await page.waitForSelector('input[name="username"]', { visible: true });
    await page.type('input[name="username"]', '***@mail.ru'); 
    await page.type('input[name="password"]', '**************'); 

    await page.waitForSelector('input[name="login"]', { visible: true });
    await page.click('input[name="login"]');

    // üìå –ñ–¥–µ–º —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    await page.waitForNavigation({ waitUntil: 'networkidle2' });
    console.log("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥!");

    // üìå –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–µ –∫—É–∫–∏
    const cookies = await page.cookies();
    fs.writeFileSync('cookies.json', JSON.stringify(cookies, null, 2));
    console.log("‚úÖ –ö—É–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!");

    // üìå –ü–æ—Å–ª–µ –ª–æ–≥–∏–Ω–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–æ–æ–±—â–µ–Ω–∏—è–º
    await page.goto('https://quasars.online/messages.php?mode=show&message_class=15', { waitUntil: 'domcontentloaded' });
    console.log("üì© –ü–µ—Ä–µ—à–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–æ–æ–±—â–µ–Ω–∏–π");
}

async function scrapeMap(){
    console.log("üîÑ –ó–∞–ø—É—Å–∫ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è...");

    let browser;
    try {
        browser = await puppeteer.launch({ headless: false });
        const page = await browser.newPage();

        // üìå –ó–∞–≥—Ä—É–∂–∞–µ–º –∫—É–∫–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        if (fs.existsSync(cookiesPath)) {
            try {
                const cookies = JSON.parse(fs.readFileSync(cookiesPath, 'utf-8'));
                await page.setCookie(...cookies);
                console.log("‚úÖ –ö—É–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!");
            } catch (error) {
                console.error("‚ö† –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫—É–∫–æ–≤:", error);
            }
        }
        await page.goto('https://quasars.online/galaxy.php?mode=0', { waitUntil: 'load', timeout: 60000 });

        // üìå –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ª–æ–≥–∏–Ω–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        const loginForm = await page.$('input[name="username"]');
        if (loginForm) {
            console.log("‚ö† –ù–µ–æ–±—Ö–æ–¥–∏–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç!");
            await login(page);
        }


        await page.waitForSelector('input [name="galaxy"]');
        await page.type('input[name="galaxy"]', '1');
        await page.type('input[name="system"]', '1'); 
        await page.waitForSelector('input[value="–ü–µ—Ä–µ–π—Ç–∏"]', { visible: true });
        await page.click('input[value="–ü–µ—Ä–µ–π—Ç–∏"]'); 
        await browser.close();
        return { success: true, message: "‚úÖ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –í—Å–µ–ª–µ–Ω–Ω–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!" };


    }catch (error) {
            console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –í—Å–µ–ª–µ–Ω–Ω–æ–π:", error);
    
            if (browser) {
                await browser.close();
            }
    
            if (retries > 0) {
                console.log(`üîÅ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞... –û—Å—Ç–∞–ª–æ—Å—å: ${retries}`);
                return await scrapeMessages(retries - 1);
            }
    
            return { success: false, message: "‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –í—Å–µ–ª–µ–Ω–Ω–æ–π –ø–æ—Å–ª–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–ø—ã—Ç–æ–∫!" };
    
        }
}
module.exports = {
    scrapeMessages,
    scrapeMap,
};